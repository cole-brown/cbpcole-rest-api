# Base this on the latest official Python 3 image.
FROM python:latest

#-------------------------------------------------------------------------------
# Python Set-Up
#-------------------------------------------------------------------------------

# Forces stdin/stdout to not buffer
# (so as not to lose log messages or something if docker container le crash).
ENV PYTHONUNBUFFERED 1


#-------------------------------------------------------------------------------
# Environment Setup
#-------------------------------------------------------------------------------

ENV TEMP_DIR /tmp
WORKDIR $TEMP_DIR

# Our app directory; can be whatever. Export as var so we can reference
# in the following commands.
ENV CODE_ROOT_DIR /srv
ENV SERVER_ROOT_DIR /srv/cole
ENV TESTER_ROOT_DIR /srv/tester
ENV RUN_ROOT_DIR  /run/cole

# Ensure some dirs exist.
RUN mkdir -p $CODE_ROOT_DIR
RUN mkdir -p $RUN_ROOT_DIR
# RUN mkdir -p SERVER_ROOT_DIR
# RUN mkdir -p $TESTER_ROOT_DIR


# Flask Env Vars
ENV FLASK_APP "cole"
ENV FLASK_ENV "development"


#-------------------------------------------------------------------------------
# Apt-Get Step!
#-------------------------------------------------------------------------------

# RUN apt-get update \
#     && apt-get install -y net-tools  # for 'ifconfig'


#-------------------------------------------------------------------------------
# Install PIP Requirements
#-------------------------------------------------------------------------------

COPY docker/build-files/build.pip-requirements.txt .
RUN pip install --no-cache-dir -r build.pip-requirements.txt


#-------------------------------------------------------------------------------
# Install Our Apps
#-------------------------------------------------------------------------------

# The Bash Scripts.
WORKDIR $RUN_ROOT_DIR
# Don't copy - expect them to be mounted as volume.
# COPY run/* .

# The Python Apps.
# WORKDIR $CODE_ROOT_DIR


#-------------------------------------------------------------------------------
# Clean-Up
#-------------------------------------------------------------------------------

WORKDIR $TEMP_DIR

# Clean up temp dir.
RUN rm -rf ${TEMP_DIR}/*


#-------------------------------------------------------------------------------
# Set-Up Entry
#-------------------------------------------------------------------------------

# docker.entrypoint.sh and helpers.
COPY docker/image-files/*.sh /

ENTRYPOINT ["/docker.entrypoint.sh"]
